import React, { useState, useEffect } from "react";
import axios from "axios";
import { 
  LayoutDashboard, 
  FileText, 
  ClipboardList, 
  CheckCircle2, 
  Activity,
  Plus,
  TrendingUp,
  Clock,
  AlertTriangle
} from "lucide-react";
import { Button } from "@/components/ui/button";
import { Card, CardContent, CardDescription, CardHeader, CardTitle } from "@/components/ui/card";
import { Badge } from "@/components/ui/badge";
import { useNavigate } from "react-router-dom";
import { toast } from "sonner";

const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;
const API = `${BACKEND_URL}/api`;

const Dashboard = () => {
  const navigate = useNavigate();
  const [dashboardData, setDashboardData] = useState(null);
  const [loading, setLoading] = useState(true);

  useEffect(() => {
    fetchDashboardData();
  }, []);

  const fetchDashboardData = async () => {
    try {
      const response = await axios.get(`${API}/dashboard`);
      setDashboardData(response.data);
    } catch (error) {
      console.error("Failed to fetch dashboard data:", error);
      toast.error("Failed to load dashboard data");
    } finally {
      setLoading(false);
    }
  };

  const getStatusBadgeVariant = (status) => {
    switch (status) {
      case 'completed': return 'default';
      case 'in_progress': return 'secondary';
      case 'draft': return 'outline';
      default: return 'outline';
    }
  };

  const formatDate = (dateString) => {
    return new Date(dateString).toLocaleDateString('en-US', {
      month: 'short',
      day: 'numeric',
      year: 'numeric'
    });
  };

  if (loading) {
    return (
      <div className="space-y-6 animate-fade-in">
        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
          {[...Array(4)].map((_, i) => (
            <Card key={i} className="animate-pulse">
              <CardContent className="p-6">
                <div className="h-4 bg-slate-200 rounded w-1/2 mb-2"></div>
                <div className="h-8 bg-slate-200 rounded w-1/3"></div>
              </CardContent>
            </Card>
          ))}
        </div>
      </div>
    );
  }

  if (!dashboardData) {
    return (
      <div className="text-center py-12">
        <AlertTriangle className="w-12 h-12 text-slate-400 mx-auto mb-4" />
        <p className="text-slate-600">Failed to load dashboard data</p>
        <Button onClick={fetchDashboardData} className="mt-4">
          Try Again
        </Button>
      </div>
    );
  }

  const stats = dashboardData.stats;

  return (
    <div className="space-y-6 animate-fade-in">
      {/* Header */}
      <div className="flex flex-col sm:flex-row sm:items-center sm:justify-between">
        <div>
          <h1 className="text-2xl font-bold text-slate-900 text-heading">Dashboard</h1>
          <p className="text-slate-600 mt-1">Overview of your security assessments</p>
        </div>
        <Button 
          onClick={() => navigate('/assessments/new')}
          className="mt-4 sm:mt-0"
          data-testid="new-assessment-btn"
        >
          <Plus className="w-4 h-4 mr-2" />
          New Assessment
        </Button>
      </div>

      {/* Stats Grid */}
      <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <Card 
          className="hover-lift cursor-pointer transition-all duration-200 hover:ring-2 hover:ring-blue-500"
          onClick={() => navigate('/templates')}
          data-testid="templates-card"
        >
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-slate-600">Templates</p>
                <p className="text-2xl font-bold text-slate-900">{stats.templates}</p>
                <p className="text-xs text-slate-500 mt-1">Click to manage</p>
              </div>
              <div className="w-12 h-12 bg-blue-100 rounded-lg flex items-center justify-center">
                <FileText className="w-6 h-6 text-blue-600" />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card 
          className="hover-lift cursor-pointer transition-all duration-200 hover:ring-2 hover:ring-indigo-500"
          onClick={() => navigate('/assessments')}
          data-testid="assessments-card"
        >
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-slate-600">Total Assessments</p>
                <p className="text-2xl font-bold text-slate-900">{stats.assessments}</p>
                <p className="text-xs text-slate-500 mt-1">Click to view all</p>
              </div>
              <div className="w-12 h-12 bg-indigo-100 rounded-lg flex items-center justify-center">
                <ClipboardList className="w-6 h-6 text-indigo-600" />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card 
          className="hover-lift cursor-pointer transition-all duration-200 hover:ring-2 hover:ring-green-500"
          onClick={() => navigate('/reports')}
          data-testid="completed-card"
        >
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-slate-600">Completed</p>
                <p className="text-2xl font-bold text-slate-900">{stats.completed}</p>
                <p className="text-xs text-slate-500 mt-1">Click for reports</p>
              </div>
              <div className="w-12 h-12 bg-green-100 rounded-lg flex items-center justify-center">
                <CheckCircle2 className="w-6 h-6 text-green-600" />
              </div>
            </div>
          </CardContent>
        </Card>

        <Card 
          className="hover-lift cursor-pointer transition-all duration-200 hover:ring-2 hover:ring-amber-500"
          onClick={() => navigate('/assessments/new')}
          data-testid="in-progress-card"
        >
          <CardContent className="p-6">
            <div className="flex items-center justify-between">
              <div>
                <p className="text-sm font-medium text-slate-600">In Progress</p>
                <p className="text-2xl font-bold text-slate-900">{stats.in_progress}</p>
                <p className="text-xs text-slate-500 mt-1">Click to start new</p>
              </div>
              <div className="w-12 h-12 bg-amber-100 rounded-lg flex items-center justify-center">
                <Activity className="w-6 h-6 text-amber-600" />
              </div>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Recent Activity */}
      <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <Clock className="w-5 h-5 mr-2 text-slate-600" />
              Recent Assessments
            </CardTitle>
            <CardDescription>
              Your latest security assessments and their status
            </CardDescription>
          </CardHeader>
          <CardContent>
            {dashboardData.recent_assessments && dashboardData.recent_assessments.length > 0 ? (
              <div className="space-y-4">
                {dashboardData.recent_assessments.map((assessment) => (
                  <div 
                    key={assessment.id} 
                    className="flex items-center justify-between p-4 rounded-lg border border-slate-200 hover:border-slate-300 transition-colors cursor-pointer"
                    onClick={() => navigate(`/assessments/${assessment.id}/workflow`)}
                    data-testid={`assessment-${assessment.id}`}
                  >
                    <div className="flex-1">
                      <h4 className="font-medium text-slate-900">{assessment.name}</h4>
                      <p className="text-sm text-slate-500">{assessment.template_name}</p>
                      <p className="text-xs text-slate-400 mt-1">
                        Updated {formatDate(assessment.updated_at)}
                      </p>
                    </div>
                    <Badge variant={getStatusBadgeVariant(assessment.status)}>
                      {assessment.status.replace('_', ' ')}
                    </Badge>
                  </div>
                ))}
              </div>
            ) : (
              <div className="text-center py-8">
                <ClipboardList className="w-12 h-12 text-slate-300 mx-auto mb-4" />
                <p className="text-slate-500">No assessments yet</p>
                <Button 
                  variant="outline" 
                  size="sm" 
                  className="mt-2"
                  onClick={() => navigate('/assessments/new')}
                >
                  Create your first assessment
                </Button>
              </div>
            )}
          </CardContent>
        </Card>

        <Card>
          <CardHeader>
            <CardTitle className="flex items-center">
              <TrendingUp className="w-5 h-5 mr-2 text-slate-600" />
              Quick Actions
            </CardTitle>
            <CardDescription>
              Common tasks and shortcuts to get started
            </CardDescription>
          </CardHeader>
          <CardContent>
            <div className="space-y-3">
              <Button 
                variant="outline" 
                className="w-full justify-start"
                onClick={() => navigate('/assessments/new')}
                data-testid="quick-new-assessment"
              >
                <Plus className="w-4 h-4 mr-2" />
                Start New Assessment
              </Button>
              
              <Button 
                variant="outline" 
                className="w-full justify-start"
                onClick={() => navigate('/templates')}
                data-testid="quick-manage-templates"
              >
                <FileText className="w-4 h-4 mr-2" />
                Manage Templates
              </Button>
              
              <Button 
                variant="outline" 
                className="w-full justify-start"
                onClick={() => navigate('/reports')}
                data-testid="quick-view-reports"
              >
                <LayoutDashboard className="w-4 h-4 mr-2" />
                View Reports
              </Button>
            </div>
          </CardContent>
        </Card>
      </div>

      {/* Welcome Message for New Users */}
      {stats.assessments === 0 && (
        <Card className="border-2 border-dashed border-blue-200 bg-blue-50/50">
          <CardContent className="p-8 text-center">
            <div className="w-16 h-16 bg-blue-100 rounded-full flex items-center justify-center mx-auto mb-4">
              <LayoutDashboard className="w-8 h-8 text-blue-600" />
            </div>
            <h3 className="text-lg font-semibold text-slate-900 mb-2">Welcome to PentestPro!</h3>
            <p className="text-slate-600 mb-6">
              Get started by creating your first security assessment using one of our pre-built templates.
            </p>
            <div className="flex flex-col sm:flex-row gap-3 justify-center">
              <Button onClick={() => navigate('/assessments/new')}>
                <Plus className="w-4 h-4 mr-2" />
                Create First Assessment
              </Button>
              <Button variant="outline" onClick={() => navigate('/templates')}>
                <FileText className="w-4 h-4 mr-2" />
                Browse Templates
              </Button>
            </div>
          </CardContent>
        </Card>
      )}
    </div>
  );
};

export default Dashboard;