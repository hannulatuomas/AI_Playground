import { useState, useEffect } from 'react';
import { useAuth } from '../contexts/AuthContext';

export const usePermissions = () => {
  const { token, user } = useAuth();
  const [permissions, setPermissions] = useState(null);
  const [loading, setLoading] = useState(true);

  const API_BASE = process.env.REACT_APP_BACKEND_URL || 'http://localhost:8001';

  useEffect(() => {
    const fetchPermissions = async () => {
      if (!token || !user) {
        setPermissions(null);
        setLoading(false);
        return;
      }

      try {
        const response = await fetch(`${API_BASE}/api/auth/permissions`, {
          headers: {
            'Authorization': `Bearer ${token}`,
            'Content-Type': 'application/json',
          },
        });

        if (response.ok) {
          const perms = await response.json();
          setPermissions(perms);
        } else {
          console.error('Failed to fetch permissions');
          setPermissions(null);
        }
      } catch (error) {
        console.error('Error fetching permissions:', error);
        setPermissions(null);
      } finally {
        setLoading(false);
      }
    };

    fetchPermissions();
  }, [token, user]);

  // Permission checking helper functions
  const can = (permission) => {
    return permissions?.[permission] || false;
  };

  const hasAnyPermission = (permissionList) => {
    return permissionList.some(permission => can(permission));
  };

  const hasAllPermissions = (permissionList) => {
    return permissionList.every(permission => can(permission));
  };

  // Convenience methods for common permissions
  const canCreateAssessments = () => can('can_create_assessments');
  const canEditAssessments = () => can('can_edit_assessments');
  const canDeleteAssessments = () => can('can_delete_assessments');
  const canViewAllAssessments = () => can('can_view_all_assessments');
  const canCreateTemplates = () => can('can_create_templates');
  const canEditTemplates = () => can('can_edit_templates');
  const canDeleteTemplates = () => can('can_delete_templates');
  const canManageUsers = () => can('can_manage_users');
  const canViewReports = () => can('can_view_reports');
  const canGenerateReports = () => can('can_generate_reports');
  const canDeleteReports = () => can('can_delete_reports');

  return {
    permissions,
    loading,
    can,
    hasAnyPermission,
    hasAllPermissions,
    canCreateAssessments,
    canEditAssessments,
    canDeleteAssessments,
    canViewAllAssessments,
    canCreateTemplates,
    canEditTemplates,
    canDeleteTemplates,
    canManageUsers,
    canViewReports,
    canGenerateReports,
    canDeleteReports,
  };
};